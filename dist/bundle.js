(()=>{"use strict";var t=function(){function t(t,i){this.canvas=t,this.boardSize=i,this.context=t.getContext("2d")}return t.prototype.drawBoard=function(){this.boardHalfSteps=2*this.boardSize+this.boardSize-1,this.cellRadius=Math.min(this.canvas.width/((this.boardHalfSteps+1)*Math.cos(Math.PI/6)),this.canvas.height/(1.5*this.boardSize+1.5));for(var t=1;t<=this.boardSize;t++)for(var i=t,a=t*this.cellRadius*1.5,o=0;o<this.boardSize;o++){var h=(i+1)*this.cellRadius*Math.cos(Math.PI/6);this.drawHexagon(h,a),i+=2}},t.prototype.drawCell=function(t,i){},t.prototype.drawHexagon=function(t,i){this.context.beginPath();for(var a=0;a<6;a++)this.context.lineTo(t+this.cellRadius*Math.cos((2*a-1)*Math.PI/6),i+this.cellRadius*Math.sin((2*a-1)*Math.PI/6));this.context.closePath(),this.context.stroke()},t}();window.onload=function(){var i=document.getElementById("canvas");i.width=4*i.width,i.height=4*i.height,new t(i,11).drawBoard()}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJtQkFBQSxpQkFLSSxXQUE2QkEsRUFBbUNDLEdBQW5DLEtBQUFELE9BQUFBLEVBQW1DLEtBQUFDLFVBQUFBLEVBQzVEQyxLQUFLQyxRQUFVSCxFQUFPSSxXQUFXLE1Bd0N6QyxPQXJDSSxZQUFBQyxVQUFBLFdBQ0lILEtBQUtJLGVBQWtDLEVBQWpCSixLQUFLRCxVQUFnQkMsS0FBS0QsVUFBWSxFQUM1REMsS0FBS0ssV0FBYUMsS0FBS0MsSUFDbkJQLEtBQUtGLE9BQU9VLFFBQVVSLEtBQUtJLGVBQWlCLEdBQUtFLEtBQUtHLElBQUlILEtBQUtJLEdBQUssSUFDcEVWLEtBQUtGLE9BQU9hLFFBQTJCLElBQWpCWCxLQUFLRCxVQUFrQixNQUdqRCxJQUFLLElBQUlhLEVBQUksRUFBR0EsR0FBS1osS0FBS0QsVUFBV2EsSUFLakMsSUFIQSxJQUFJQyxFQUFJRCxFQUVGRSxFQUFTRixFQUFFWixLQUFLSyxXQUFXLElBQ3hCVSxFQUFXLEVBQUdBLEVBQVdmLEtBQUtELFVBQVdnQixJQUFZLENBQzFELElBQU1DLEdBQVVILEVBQUksR0FBS2IsS0FBS0ssV0FBYUMsS0FBS0csSUFBSUgsS0FBS0ksR0FBSyxHQUU5RFYsS0FBS2lCLFlBQVlELEVBQVFGLEdBQ3pCRCxHQUFLLElBS2pCLFlBQUFLLFNBQUEsU0FBU0wsRUFBWUQsS0FJckIsWUFBQUssWUFBQSxTQUFZSixFQUFZRCxHQUNwQlosS0FBS0MsUUFBUWtCLFlBQ2IsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUksRUFBR0EsSUFFbkJwQixLQUFLQyxRQUFRb0IsT0FDUlIsRUFBSWIsS0FBS0ssV0FBYUMsS0FBS0csS0FBVSxFQUFKVyxFQUFTLEdBQUtkLEtBQUtJLEdBQUssR0FDekRFLEVBQUlaLEtBQUtLLFdBQWFDLEtBQUtnQixLQUFVLEVBQUpGLEVBQVMsR0FBS2QsS0FBS0ksR0FBSyxJQUdsRVYsS0FBS0MsUUFBUXNCLFlBQ2J2QixLQUFLQyxRQUFRdUIsVUFFckIsRUE5Q0EsR0NZQUMsT0FBT0MsT0FWUCxXQUNJLElBQUk1QixFQUE0QjZCLFNBQVNDLGVBQWUsVUFDeEQ5QixFQUFPVSxNQUF1QixFQUFmVixFQUFPVSxNQUN0QlYsRUFBT2EsT0FBeUIsRUFBaEJiLEVBQU9hLE9BR04sSUFBSWtCLEVBQWdCL0IsRUFGeEIsSUFHSkssYyIsInNvdXJjZXMiOlsid2VicGFjazovL2hleF9vbmxpbmUvLi9zcmMvaGV4Qm9hcmREaXNwbGF5LnRzIiwid2VicGFjazovL2hleF9vbmxpbmUvLi9zcmMvbWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgaGV4Qm9hcmREaXNwbGF5IHtcbiAgICBwcml2YXRlIGNvbnRleHQgOiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XG4gICAgcHJpdmF0ZSBib2FyZEhhbGZTdGVwcyA6IG51bWJlcjtcbiAgICBwcml2YXRlIGNlbGxSYWRpdXMgOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGNhbnZhcyA6IEhUTUxDYW52YXNFbGVtZW50LCBwdWJsaWMgYm9hcmRTaXplIDogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgfVxuXG4gICAgZHJhd0JvYXJkKCkgOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ib2FyZEhhbGZTdGVwcyA9IHRoaXMuYm9hcmRTaXplICogMiArIHRoaXMuYm9hcmRTaXplIC0gMTtcbiAgICAgICAgdGhpcy5jZWxsUmFkaXVzID0gTWF0aC5taW4oXG4gICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCAvICgodGhpcy5ib2FyZEhhbGZTdGVwcyArIDEpICogTWF0aC5jb3MoTWF0aC5QSSAvIDYpKSxcbiAgICAgICAgICAgIHRoaXMuY2FudmFzLmhlaWdodCAvICh0aGlzLmJvYXJkU2l6ZSAqIDEuNSArIDEuNSlcbiAgICAgICAgKTtcblxuICAgICAgICBmb3IgKGxldCB5ID0gMTsgeSA8PSB0aGlzLmJvYXJkU2l6ZTsgeSsrKSB7XG4gICAgICAgICAgICAvLyBEb2luZyB0aGlzIGFuZCBjb3VudGluZyBudW1iZXIgb2YgdGlsZXMgZHJhd24gcGVyIHJvdyBnaXZlcyB0aGUgcmhvbWJ1cyBzaGFwZSB3ZSBuZWVkLlxuICAgICAgICAgICAgbGV0IHggPSB5O1xuICAgICAgICAgICAgLy8gSWYgd2UganVzdCB1c2UgdGhlIHJhZGl1cyBmb3IgdGhlc2UgdGhlbiB0aGUgdGlsZXMgZG8gbm90IHRvdWNoIGFzIHRoZXkgYXJlIG1vZGVsbGVkIGFzIGNpcmNsZXMgbm90IGhleGFnb25zLlxuICAgICAgICAgICAgY29uc3QgeVBpeGVsID0geSp0aGlzLmNlbGxSYWRpdXMqMS41O1xuICAgICAgICAgICAgZm9yIChsZXQgcm93RHJhd24gPSAwOyByb3dEcmF3biA8IHRoaXMuYm9hcmRTaXplOyByb3dEcmF3bisrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeFBpeGVsID0gKHggKyAxKSAqIHRoaXMuY2VsbFJhZGl1cyAqIE1hdGguY29zKE1hdGguUEkgLyA2KTtcbiAgICAgICAgICAgICAgICAvLyBIYXZlIHRvIHVzZSB5IC0gMSB0byBpbmRleCBiZWNhdXNlIHkgc3RhcnRzIGF0IDEuXG4gICAgICAgICAgICAgICAgdGhpcy5kcmF3SGV4YWdvbih4UGl4ZWwsIHlQaXhlbCk7XG4gICAgICAgICAgICAgICAgeCArPSAyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZHJhd0NlbGwoeCA6IG51bWJlciwgeSA6IG51bWJlcikgOiB2b2lkIHtcblxuICAgIH1cblxuICAgIGRyYXdIZXhhZ29uKHggOiBudW1iZXIsIHkgOiBudW1iZXIpIDogdm9pZCB7XG4gICAgICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA2OyBpKyspIHtcbiAgICAgICAgICAgIC8vIFRydXN0IG1lIHRoaXMgZHJhd3MgYSBoZXhhZ29uLiBUaGUgLTEgY29uc3RhbnQgaXMgdG8gZ2V0IHRoZSBwb2ludHkgc2lkZSB1cCByYXRoZXIgdGhhbiBmbGF0IHNpZGUgdXAuXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQubGluZVRvKFxuICAgICAgICAgICAgICAgICh4ICsgdGhpcy5jZWxsUmFkaXVzICogTWF0aC5jb3MoKChpICogMikgLSAxKSAqIE1hdGguUEkgLyA2KSksXG4gICAgICAgICAgICAgICAgKHkgKyB0aGlzLmNlbGxSYWRpdXMgKiBNYXRoLnNpbigoKGkgKiAyKSAtIDEpICogTWF0aC5QSSAvIDYpKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIHRoaXMuY29udGV4dC5zdHJva2UoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQge2hleEJvYXJkRGlzcGxheX0gZnJvbSAnLi9oZXhCb2FyZERpc3BsYXknXG5cbmZ1bmN0aW9uIG1haW4oKSB7XG4gICAgbGV0IGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcbiAgICBjYW52YXMud2lkdGggPSBjYW52YXMud2lkdGggKiA0O1xuICAgIGNhbnZhcy5oZWlnaHQgPSBjYW52YXMuaGVpZ2h0ICogNDtcbiAgICBjb25zdCBzaXplID0gMTE7XG5cbiAgICBjb25zdCBoZXhCb2FyZCA9IG5ldyBoZXhCb2FyZERpc3BsYXkoY2FudmFzLCBzaXplKTtcbiAgICBoZXhCb2FyZC5kcmF3Qm9hcmQoKTtcbn1cblxud2luZG93Lm9ubG9hZCA9IG1haW47XG4iXSwibmFtZXMiOlsiY2FudmFzIiwiYm9hcmRTaXplIiwidGhpcyIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwiZHJhd0JvYXJkIiwiYm9hcmRIYWxmU3RlcHMiLCJjZWxsUmFkaXVzIiwiTWF0aCIsIm1pbiIsIndpZHRoIiwiY29zIiwiUEkiLCJoZWlnaHQiLCJ5IiwieCIsInlQaXhlbCIsInJvd0RyYXduIiwieFBpeGVsIiwiZHJhd0hleGFnb24iLCJkcmF3Q2VsbCIsImJlZ2luUGF0aCIsImkiLCJsaW5lVG8iLCJzaW4iLCJjbG9zZVBhdGgiLCJzdHJva2UiLCJ3aW5kb3ciLCJvbmxvYWQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaGV4Qm9hcmREaXNwbGF5Il0sInNvdXJjZVJvb3QiOiIifQ==